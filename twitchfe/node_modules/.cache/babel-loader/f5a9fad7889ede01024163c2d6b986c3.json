{"ast":null,"code":"var _jsxFileName = \"/Users/lzr/Desktop/twitch/twitchfe/src/components/Home.js\";\nimport React from 'react';\nimport { Button, Card, List, message, Tabs, Tooltip } from 'antd';\nimport { StarOutlined, StarFilled } from '@ant-design/icons';\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\nconst tabKeys = {\n  Streams: 'stream',\n  Videos: 'videos',\n  Clips: 'clips'\n};\n\nconst processUrl = url => url.replace('%{height}', '252').replace('%{width}', '480').replace('{height}', '252').replace('{width}', '480');\n\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\n  const title = `${item.broadcaster_name} - ${item.title}`;\n  const isFav = favs.find(fav => fav.id === item.id);\n\n  const favOnClick = () => {\n    if (isFav) {\n      deleteFavoriteItem(item).then(() => {\n        favOnChange();\n      }).catch(err => {\n        message.error(err.message);\n      });\n      return;\n    }\n\n    addFavoriteItem(item).then(() => {\n      favOnChange();\n    }).catch(err => {\n      message.error(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loggedIn && /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: isFav ? \"Remove from favorite list\" : \"Add to favorite list\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        shape: \"circle\",\n        icon: isFav ? /*#__PURE__*/_jsxDEV(StarFilled, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 58\n        }, this) : /*#__PURE__*/_jsxDEV(StarOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 75\n        }, this),\n        onClick: favOnClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        width: 450\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: title,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\n  return /*#__PURE__*/_jsxDEV(List, {\n    grid: {\n      xs: 1,\n      sm: 2,\n      md: 4,\n      lg: 4,\n      xl: 6\n    },\n    dataSource: data,\n    renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n      style: {\n        marginRight: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: renderCardTitle(item, loggedIn, favs, favOnChange),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"Placeholder\",\n            src: processUrl(item.thumbnail_url)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\nconst Home = _ref => {\n  let {\n    resources,\n    loggedIn,\n    favoriteItems,\n    favoriteOnChange\n  } = _ref;\n  const {\n    VIDEO,\n    STREAM,\n    CLIP\n  } = resources;\n  const {\n    VIDEO: favVideos,\n    STREAM: favStreams,\n    CLIP: favClips\n  } = favoriteItems;\n  return /*#__PURE__*/_jsxDEV(Tabs, {\n    defaultActiveKey: tabKeys.Streams,\n    children: [/*#__PURE__*/_jsxDEV(TabPane, {\n      tab: \"Streams\",\n      style: {\n        height: '680px',\n        overflow: 'auto'\n      },\n      forceRender: true,\n      children: renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)\n    }, tabKeys.Streams, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n      tab: \"Videos\",\n      style: {\n        height: '680px',\n        overflow: 'auto'\n      },\n      forceRender: true,\n      children: renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)\n    }, tabKeys.Videos, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n      tab: \"Clips\",\n      style: {\n        height: '680px',\n        overflow: 'auto'\n      },\n      forceRender: true,\n      children: renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)\n    }, tabKeys.Clips, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/lzr/Desktop/twitch/twitchfe/src/components/Home.js"],"names":["React","Button","Card","List","message","Tabs","Tooltip","StarOutlined","StarFilled","addFavoriteItem","deleteFavoriteItem","TabPane","tabKeys","Streams","Videos","Clips","processUrl","url","replace","renderCardTitle","item","loggedIn","favs","favOnChange","title","broadcaster_name","isFav","find","fav","id","favOnClick","then","catch","err","error","overflow","textOverflow","width","renderCardGrid","data","xs","sm","md","lg","xl","marginRight","thumbnail_url","Home","resources","favoriteItems","favoriteOnChange","VIDEO","STREAM","CLIP","favVideos","favStreams","favClips","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Card, List, message, Tabs, Tooltip } from 'antd';\nimport { StarOutlined, StarFilled } from '@ant-design/icons';\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\n\nconst { TabPane } = Tabs;\nconst tabKeys = {\n    Streams: 'stream',\n    Videos: 'videos',\n    Clips: 'clips',\n}\n\nconst processUrl = (url) => url\n    .replace('%{height}', '252')\n    .replace('%{width}', '480')\n    .replace('{height}', '252')\n    .replace('{width}', '480');\n\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\n    const title = `${item.broadcaster_name} - ${item.title}`;\n\n    const isFav = favs.find((fav) => fav.id === item.id);\n\n    const favOnClick = () => {\n        if (isFav) {\n            deleteFavoriteItem(item).then(() => {\n                favOnChange();\n            }).catch(err => {\n                message.error(err.message)\n            })\n\n            return;\n        }\n\n        addFavoriteItem(item).then(() => {\n            favOnChange();\n        }).catch(err => {\n            message.error(err.message)\n        })\n    }\n\n    return (\n        <>\n            {\n                loggedIn &&\n                <Tooltip title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}>\n                    <Button shape=\"circle\" icon={isFav ? <StarFilled /> : <StarOutlined />} onClick={favOnClick} />\n                </Tooltip>\n            }\n            <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', width: 450 }}>\n                <Tooltip title={title}>\n                    <span>{title}</span>\n                </Tooltip>\n            </div>\n        </>\n    )\n}\n\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\n    return (\n        <List\n            grid={{\n                xs: 1,\n                sm: 2,\n                md: 4,\n                lg: 4,\n                xl: 6,\n            }}\n            dataSource={data}\n            renderItem={item => (\n                <List.Item style={{ marginRight: '20px' }}>\n                    <Card\n                        title={renderCardTitle(item, loggedIn, favs, favOnChange)}\n                    >\n                        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img\n                                alt=\"Placeholder\"\n                                src={processUrl(item.thumbnail_url)}\n                            />\n                        </a>\n                    </Card>\n                </List.Item>\n            )}\n        />\n    )\n}\n\nconst Home = ({ resources, loggedIn, favoriteItems, favoriteOnChange }) => {\n    const { VIDEO, STREAM, CLIP } = resources;\n    const { VIDEO: favVideos, STREAM: favStreams, CLIP: favClips } = favoriteItems;\n\n    return (\n        <Tabs\n            defaultActiveKey={tabKeys.Streams}\n        >\n            <TabPane tab=\"Streams\" key={tabKeys.Streams} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Videos\" key={tabKeys.Videos} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Clips\" key={tabKeys.Clips} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\n            </TabPane>\n        </Tabs>\n    );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}